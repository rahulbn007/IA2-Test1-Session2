gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0xab3: file p8final.c, line 55.
(gdb) r
Starting program: /home/runner/IA2-Test1-Session2/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p8final.c:55
55  {
(gdb) n
57    x=input_n();
(gdb) s
input_n () at p8final.c:7
7   {
(gdb) n
9     printf("Enter the number of triangles:\n");
(gdb) n
Enter the number of triangles:
10    scanf("%d",&n);
(gdb) n
2
11    return n;
(gdb) n
12  }
(gdb) p n
$1 = 2
(gdb) n
main () at p8final.c:58
58    Triangle t[x],smallest;
(gdb) n
59    input_n_triangles(x,t);
(gdb) s
input_n_triangles (n=2, t=0x7ffc6a897c30) at p8final.c:22
22    for(int i=0;i<n;i++)
(gdb) n
23      t[i]=input_triangle();
(gdb) s
input_triangle () at p8final.c:14
14  {
(gdb) n
16    printf("Enter the base and altitude of the triangle:\n");
(gdb) n
Enter the base and altitude of the triangle:
17    scanf("%f%f",&t1.base,&t1.altitude);
(gdb) n
2
3
18    return t1;
(gdb) n
19  }
(gdb) n
input_n_triangles (n=2, t=0x7ffc6a897c30) at p8final.c:22
22    for(int i=0;i<n;i++)
(gdb) p t[i]
$2 = {base = 2, altitude = 3, area = 0}
(gdb) n
23      t[i]=input_triangle();
(gdb) s
input_triangle () at p8final.c:14
14  {
(gdb) n
16    printf("Enter the base and altitude of the triangle:\n");
(gdb) n
Enter the base and altitude of the triangle:
17    scanf("%f%f",&t1.base,&t1.altitude);
(gdb) n
4
5
18    return t1;
(gdb) n
19  }
(gdb) n
input_n_triangles (n=2, t=0x7ffc6a897c30) at p8final.c:22
22    for(int i=0;i<n;i++)
(gdb) p t[i]
$3 = {base = 4, altitude = 5, area = 0}
(gdb) n
24  }
(gdb) n
main () at p8final.c:60
60    find_areas_n(x,t);
(gdb) s
find_areas_n (n=2, t=0x7ffc6a897c30) at p8final.c:31
31    for(int i=0;i<n;i++)
(gdb) n
32     find_area(&t[i]);
(gdb) s
find_area (t=0x7ffc6a897c30) at p8final.c:27
27    t->area=(t->base*t->altitude)/2.0;
(gdb) n
28  }
(gdb) 
find_areas_n (n=2, t=0x7ffc6a897c30) at p8final.c:31
31    for(int i=0;i<n;i++)
(gdb) p t[i]
$4 = {base = 2, altitude = 3, area = 3}
(gdb) n
32     find_area(&t[i]);
(gdb) s
find_area (t=0x7ffc6a897c3c) at p8final.c:27
27    t->area=(t->base*t->altitude)/2.0;
(gdb) n
28  }
(gdb) n
find_areas_n (n=2, t=0x7ffc6a897c30) at p8final.c:31
31    for(int i=0;i<n;i++)
(gdb) p t[i]
$5 = {base = 4, altitude = 5, area = 10}
(gdb) n
33  }
(gdb) n
main () at p8final.c:61
61    smallest=find_smallest_triangle(x,t);
(gdb) s
find_smallest_triangle (n=2, t=0x7ffc6a897c30) at p8final.c:37
37    small=t[0];
(gdb) n
38    for(int i=0;i<n;i++)
(gdb) n
40       if(small.area>t[i].area)
(gdb) n
38    for(int i=0;i<n;i++)
(gdb) p small
$6 = {base = 2, altitude = 3, area = 3}
(gdb) n
40       if(small.area>t[i].area)
(gdb) n
38    for(int i=0;i<n;i++)
(gdb) p small
$7 = {base = 2, altitude = 3, area = 3}
(gdb) n
45    return small;
(gdb) n
46  }
(gdb) p small
$8 = {base = 2, altitude = 3, area = 3}
(gdb) n
main () at p8final.c:62
62    output(x,t,smallest);
(gdb) s
output (n=2, t=0x7ffc6a897c30, smallest=...) at p8final.c:49
49    printf("Amongst the %d triangles with base and height\n",n);
(gdb) n
Amongst the 2 triangles with base and height
50    for(int i=0;i<n;i++)
(gdb) n
51      printf("%f , %f \n",t[i].base,t[i].altitude);
(gdb) n
2.000000 , 3.000000 
50    for(int i=0;i<n;i++)
(gdb) n
51      printf("%f , %f \n",t[i].base,t[i].altitude);
(gdb) n
4.000000 , 5.000000 
50    for(int i=0;i<n;i++)
(gdb) n
52   printf("The smalles triangle is the triangle with \nBase:%f \nHieght: %f \nAnd its area is %f",smallest.base,smallest.altitude,smallest.area); 
(gdb) n
The smalles triangle is the triangle with 
Base:2.000000 
Hieght: 3.000000 
53  }
(gdb) n
main () at p8final.c:63
63    return 0;
(gdb) n
64  }
(gdb) c
Continuing.
And its area is 3.000000[Inferior 1 (process 621) exited normally]
(gdb) q